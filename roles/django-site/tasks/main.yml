---
- name: Include version-specific variables for Ubuntu.
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_distribution == 'Ubuntu'

- name: Ensure django-site directory exists
  file:
    path={{ django_site_root | mandatory }}
    state=directory
    recurse=yes
  tags: ['django']

- name: Create django group
  group:
    name=django
    system=yes
    state=present
  tags: ['django']

- name: Create django user
  user:
    name=django
    append=yes
    group=django
    home={{ django_site_root }}
    shell=/bin/bash
    system=yes
    state=present
  tags: ['django']

- name: Add jenkins to django group
  user:
    name=jenkins
    append=yes
    group=django
  tags: ['django']

- name: Set django-site directory mode
  file:
    path={{ django_site_root | mandatory }}
    state=directory
    owner=django
    group=django
    mode=02775
  tags: ['django']

- name: Ensure django-site htdocs directory exists
  file:
    path={{ django_site_root }}/htdocs
    state=directory
    owner=django
    group=django
    mode=02775
  tags: ['django']

- name: Generate Google site verification file
  copy:
    dest: '{{ django_site_root }}/htdocs/google{{ google_site_verification_code }}.html'
    content: 'google-site-verification: google{{ google_site_verification_code }}.html'
    owner: django
    group: django
    mode: 0644
  when: google_site_verification_code is defined
  tags: ['django']

- name: Link media dir
  file:
    src=static/media
    dest={{ django_site_root | mandatory }}/media
    force=yes
    state=link
  tags: ['django']

- name: Set git identity to shut repo up
  command: git config --global user.name Admin
  tags: ['django']

- name: Set git identity to shut repo up
  command: git config --global user.email admin@localhost
  tags: ['django']

- name: Repo-init the django manifest
  command: repo init -u {{ django_site_manifest_url | mandatory }}
    creates={{ django_site_root }}/.repo/manifest.xml
    chdir={{ django_site_root }}
  tags: ['django']

- name: Repo-sync the latest source tree
  command: repo sync
    chdir={{ django_site_root }}
  tags: ['django']

- name: Include version-specific variables for Debian.
  include_vars: "{{ ansible_distribution|title }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == 'Debian'

- name: Add certbot apt repository.
  apt_repository:
    repo: ppa:certbot/certbot
    state: present
    update_cache: true
  when: "ansible_distribution_version.split('.')[0] == '18'"

- name: Ensure dependencies are installed.
  apt: pkg={{ item }} state=present
  with_items: '{{ django_site_packages }}'
  tags: ['django']

- name: Install pipenv
  pip: name=pipenv version=2020.8.13 state=present
  tags: ['django']

- name: Upgrade pip
  pip: name=pip version=20.2.3 state=present
  tags: ['django']

- name: Install mod_wsgi
  pip: name=mod_wsgi state=latest
  tags: ['django']

- name: Configure mod_wsgi
  shell: >
    mod_wsgi-express module-config > /etc/apache2/mods-available/wsgi.load
  changed_when: false

- include: postgresql.yml

- name: Generate settings_local.py
  template: >
    src=django/settings_local.py.j2
    dest={{ django_site_root }}/site/project/settings_local.py
    owner=django
    group=django
    mode=0640
  tags: ['django']

- name: Prepare database schema
  command: make prepare-db
    chdir={{ django_site_root }}/site
  become_user: django
  environment:
    DJANGO_SETTINGS_MODULE: project.settings_local
  tags: ['django']

- name: Touch wsgi.py
  file:
    path={{ django_site_root }}/site/project/wsgi.py state=touch
  tags: ['django']

- include: apache.yml
  tags: ['apache-conf', 'django']
