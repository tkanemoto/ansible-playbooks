from __future__ import absolute_import
from .settings import *
from os.path import abspath, dirname, join

DATABASES['default'] = {
    'ENGINE': 'django.db.backends.postgresql_psycopg2',
    'NAME': '{{ django_database_db }}',
    'USER': '{{ django_database_username }}',
    'HOST': 'localhost',
    'PORT': '5432',
    'PASSWORD': '{{ django_database_password }}',
}

DEBUG = False
TEMPLATE_DEBUG = False
ALLOWED_HOSTS = ['*']

MEDIA_ROOT = '/var/www/django-site/media/'
MEDIA_URL = '/media/'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
        'KEY_PREFIX': 'apps_',
    }
}
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

FILEBROWSER_VERSIONS_BASEDIR = '_versions'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.RemoteUserBackend',
)

MIDDLEWARE += [
    'django.contrib.auth.middleware.RemoteUserMiddleware',
]
LOGIN_URL = 'https://tkanemoto.cloudflareaccess.com/'

TEMPLATES[0]['OPTIONS']['context_processors'] += [
  'social_django.context_processors.backends',
  'social_django.context_processors.login_redirect',
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'default': {
            'format': '%(asctime)s [%(levelname)s] %(module)s: %(message)s'
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        }
    },
    'handlers': {
        'console':{
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'default'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'filters': ['require_debug_false'],
            'include_html': False,
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'INFO',
        },
        'django.request': {
            'handlers': ['console', 'mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
    },
    'root': {
        'handlers': ['console', 'mail_admins'],
        'level': 'INFO',
    }
}

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
AWS_STORAGE_BUCKET_NAME = 'tk-websites'
AWS_QUERYSTRING_AUTH = False
AWS_S3_REGION_NAME = 'eu-west-2'
AWS_S3_CUSTOM_DOMAIN = 'sites.tkanemoto.com'
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=2592000',
}
AWS_QUERYSTRING_EXPIRE = 2592000
AWS_DEFAULT_ACL = 'public-read'
#COMPRESS_URL = "https://d24rjl3bqqv7dl.cloudfront.net/"
COMPRESS_URL = "https://sites.tkanemoto.com/"
COMPRESS_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
COMPRESS_ENABLED = True

ADMIN_SITE_HEADER = "Tak's site admin site thingie"

TORRENT_SEARCH_ENGINES = [
    ('piratebay.party', {
        'url': 'https://piratebay.party/search/{query}/{page}/7/0',
        'default-page': 1,
        'filters': [{'name': 'table', 'id': 'searchResult'}]
    })
]
for site in [
        'proxybay.zone',
        'thepiratebay.blog',
        'piratemirror.live',
        'thepiratebay.zone',
        'pirateproxy.live',
        'piratebay1.live',
        'thepiratebay10.org',
        'piratebay1.xyz',
        'thepiratebay1.top',
        'piratebay1.info',
        ]:
    TORRENT_SEARCH_ENGINES.append((site, {
        'url': 'https://' + site + '/search.php?q={query}&p={page}&cat=0',
        'default-page': 1,
        #'filters': [{'name': 'table', 'id': 'searchResult'}]
        'filters': [{'name': 'ol', 'id': 'torrents'}]
    }))
TORRENT_WEBSOCKET_EXTERNAL_PORT = 443
TORRENT_WEBSOCKET_EXTERNAL_SECURE = True

# Sentry
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

sentry_sdk.init(
    dsn="https://ef1d89692ff147ef911b67609fdcb7dc@o515672.ingest.sentry.io/5620872",
    integrations=[DjangoIntegration()],
    traces_sample_rate=1.0,

    # If you wish to associate users to errors (assuming you are using
    # django.contrib.auth) you may enable sending PII data.
    send_default_pii=True
)

{{ django_extra_settings }}
